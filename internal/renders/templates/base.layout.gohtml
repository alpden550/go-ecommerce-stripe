{{define "base"}}
    <!doctype html>
    <html lang="en">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet"
              integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x"
              crossorigin="anonymous">

        <title>
            {{block "title" .}}
            {{end}}
        </title>
        <script>
        </script>
        {{block "in-head" .}}
        {{end}}
    </head>
    <body>

    <div class="container">

        {{template "nav" .}}

        <div class="row">
            <div class="col">
                {{block "content" .}} {{end}}
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4"
            crossorigin="anonymous"></script>

    <script>
        let loginLink = document.getElementById("login-link");
        let productsLink = document.getElementById("products-link");

        {{if eq .IsAuthenticated 1}}
        let socket;

        document.addEventListener("DOMContentLoaded", function () {
            socket = new WebSocket("ws://localhost:4000/ws")

            socket.onopen = () => {
            }

            socket.onclose = event => {
            };

            socket.onerror = error => {
            };

            socket.onmessage = msg => {
                let data = JSON.parse(msg.data);

                switch (data.action) {
                    case "logout":
                        if (data.user_id === {{.UserID}}) {
                            logout();
                        }
                        break;
                    default:
                }
            }

        })
        {{end}}

        function logout() {
            localStorage.removeItem("token");
            localStorage.removeItem("token_expire");
            location.href = "/auth/logout";
        }

        function checkAuth() {
            let token = localStorage.getItem("token");
            if (token === null) {
                location.href = "/auth/login";
                return
            }

            const headers = new Headers();
            headers.append("Content-Type", "application/json");
            headers.append("Authorization", "Bearer " + token);

            const requestOptions = {
                method: "POST",
                headers: headers,
            };
            fetch("{{.API}}/api/auth/is_authenticated", requestOptions)
                .then(response => response.json())
                .then(function (data) {
                    if (data.error === true) {
                        localStorage.removeItem("token");
                        localStorage.removeItem("token_expire");
                        location.href = "/auth/login";
                    } else {
                        console.log('login!');
                    }
                })

        }
    </script>

    {{block "js" .}}

    {{end}}

    </body>

    </html>

{{end}}